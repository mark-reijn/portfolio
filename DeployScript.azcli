## this script is made to work using bash, powershell is currently not supported
az login
az account set --subscription 'Azure for Students'

RESOURCE_NAME='PortfolioResource'
WEBSITE_NAME='PortfolioMarkReijn'
SP_NAME='PortfolioServicePlan'
KEY_NAME='PortfolioVaultMark2023V6'
LOCATION='westeurope'
GIT=https://github.com/mark-reijn/portfolio

echo "Creating group"
az group create \
    --location $LOCATION \
    --name $RESOURCE_NAME

echo "Creating keyvault"
az keyvault create \
    --resource-group $RESOURCE_NAME \
    --name $KEY_NAME \
    --location $LOCATION

echo "Adding secret"
az keyvault secret set \
    --vault-name $KEY_NAME \
    --name 'DbConnection' \
    --value 'markreijn:Rn0TwmhnShIeDrWf@portfolio.7sw702i.mongodb.net/?retryWrites=true&w=majority'

echo "Creating service plan"
az appservice plan create \
    --name $SP_NAME \
    --resource-group $RESOURCE_NAME \
    --is-linux \
    --sku FREE

echo "Creating webapp"
az webapp create \
    --name $WEBSITE_NAME \
    --runtime 'PYTHON:3.9' \
    --resource-group $RESOURCE_NAME \
    --plan $SP_NAME

echo "Deploying webapp"
az webapp deployment source config \
    --name $WEBSITE_NAME \
    --resource-group $RESOURCE_NAME \
    --manual-integration \
    --branch main \
    --repo-url https://github.com/mark-reijn/portfolio

echo "Creating webapp identity"
az webapp identity assign \
    --name PortfolioMarkReijn \
    --resource-group $RESOURCE_NAME
PRINCIPAL_ID=$(az webapp identity show --name PortfolioMarkReijn --resource-group $RESOURCE_NAME | jq -r '.principalId')
echo $PRINCIPAL_ID

echo "Adding webapp identity to the key vault"
az keyvault set-policy \
    --name $KEY_NAME \
    --object-id $PRINCIPAL_ID \
    --secret-permissions get list

az group list --query "[].{Name:name,Location:location}" --output table
az resource list --resource-group $RESOURCE_NAME --query "[].{Name:name,Type:type,Location:location}" --output table

read -p "Do you want to delete the resource group [y/n]: ${RESOURCE_NAME}? " DELETE

if [[ "$DELETE" == "y" ]] 
then
    az group delete --name $RESOURCE_NAME --yes --no-wait
    echo Deleted the resource and all it items
else
    echo Not deleting the resource.
fi    

echo Have a nice day.